name: Update AdGuard Blocklist (dist branch)

on:
  workflow_dispatch: {}
  schedule:
    - cron: "17 3 * * *"  # daily @ 03:17 UTC

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Generate blocklist
        env:
          OUTPUT_FILE: adguard_blocklist.txt
          SOURCES_FILE: sources.txt
          ALLOWLIST_FILE: allowlist.txt
          EXTRAS_BLOCK_FILE: extras_block.txt
          ENABLE_SUBSUMPTION: "1"
        run: |
          set -e
          python convert_hosts.py
          echo "== Build directory =="
          ls -la
          echo "== Preview (head -n 20) =="
          head -n 20 adguard_blocklist.txt
          echo "== Rule count =="
          grep -E '^\|\|.+\^$' adguard_blocklist.txt | wc -l || true

      - name: Ensure output exists
        run: |
          set -e
          test -f adguard_blocklist.txt || { echo "❌ adguard_blocklist.txt not found"; exit 1; }

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: adguard-blocklist
          path: adguard_blocklist.txt
          if-no-files-found: error
          retention-days: 1

  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository (for dist branch ops)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: adguard-blocklist
          path: artifacts

      - name: Verify artifact exists
        shell: bash
        run: |
          set -e
          echo "== Artifacts dir =="
          ls -la artifacts || true
          if [[ ! -f "artifacts/adguard_blocklist.txt" ]]; then
            echo "❌ artifacts/adguard_blocklist.txt not found. Check the build job logs."
            exit 1
          fi

      - name: Prepare dist branch
        shell: bash
        run: |
          set -e
          git fetch origin +refs/heads/dist:refs/remotes/origin/dist || true
          if git show-ref --verify --quiet refs/remotes/origin/dist; then
            echo "dist branch exists."
            git checkout -B dist origin/dist
          else
            echo "Creating dist branch (orphan)."
            git checkout --orphan dist
            # Clean working tree but keep .git
            shopt -s dotglob
            for p in * .*; do
              [[ "$p" == "." || "$p" == ".." || "$p" == ".git" ]] && continue
              rm -rf -- "$p"
            done
          fi

      - name: Replace contents with built file (keep .git)
        shell: bash
        run: |
          set -e
          # Remove everything except .git
          shopt -s dotglob
          for p in * .*; do
            [[ "$p" == "." || "$p" == ".." || "$p" == ".git" ]] && continue
            rm -rf -- "$p"
          done
          # Copy artifact into root
          cp -f artifacts/adguard_blocklist.txt ./adguard_blocklist.txt
          git add adguard_blocklist.txt

      - name: Commit if changed (dist) with rule count
        shell: bash
        run: |
          set -e
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          RULES=$(grep -E '^\|\|.+\^$' adguard_blocklist.txt | wc -l | awk '{print $1}')
          TS=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          if [[ -n "$(git status --porcelain)" ]]; then
            git commit -m "dist: update blocklist (rules: ${RULES}) (${TS})"
            git push origin dist
          else
            echo "No changes on dist."
          fi

      - name: Delete workflow run artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: adguard-blocklist
